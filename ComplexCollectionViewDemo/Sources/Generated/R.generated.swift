//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 colors.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 18 files.
  struct file {
    /// Resource file `ACDCBackInBlack.jpg`.
    static let acdcBackInBlackJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "ACDCBackInBlack", pathExtension: "jpg")
    /// Resource file `AdvertBackground.jpg`.
    static let advertBackgroundJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "AdvertBackground", pathExtension: "jpg")
    /// Resource file `Asia.jpg`.
    static let asiaJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "Asia", pathExtension: "jpg")
    /// Resource file `BeatlesAbbeyRoad.jpg`.
    static let beatlesAbbeyRoadJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BeatlesAbbeyRoad", pathExtension: "jpg")
    /// Resource file `BlackSabbath.jpg`.
    static let blackSabbathJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BlackSabbath", pathExtension: "jpg")
    /// Resource file `BlondieParallelLines.jpg`.
    static let blondieParallelLinesJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BlondieParallelLines", pathExtension: "jpg")
    /// Resource file `BowieAladinSane.jpg`.
    static let bowieAladinSaneJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BowieAladinSane", pathExtension: "jpg")
    /// Resource file `BowieDiamondDogs.jpg`.
    static let bowieDiamondDogsJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BowieDiamondDogs", pathExtension: "jpg")
    /// Resource file `BrainSalad.jpg`.
    static let brainSaladJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "BrainSalad", pathExtension: "jpg")
    /// Resource file `CreamDisraeliGears.jpg`.
    static let creamDisraeliGearsJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "CreamDisraeliGears", pathExtension: "jpg")
    /// Resource file `ElvisPresleyDebutAlbum.jpg`.
    static let elvisPresleyDebutAlbumJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "ElvisPresleyDebutAlbum", pathExtension: "jpg")
    /// Resource file `GoodbyeYellowBrickRoad.jpg`.
    static let goodbyeYellowBrickRoadJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "GoodbyeYellowBrickRoad", pathExtension: "jpg")
    /// Resource file `ItsABeautifulDay.jpg`.
    static let itsABeautifulDayJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "ItsABeautifulDay", pathExtension: "jpg")
    /// Resource file `JoeJacksonLookSharp.jpg`.
    static let joeJacksonLookSharpJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "JoeJacksonLookSharp", pathExtension: "jpg")
    /// Resource file `MadnessOneStepBeyond.jpg`.
    static let madnessOneStepBeyondJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "MadnessOneStepBeyond", pathExtension: "jpg")
    /// Resource file `MothersOfInventionWeaselsRippedMyFlesh.jpg`.
    static let mothersOfInventionWeaselsRippedMyFleshJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "MothersOfInventionWeaselsRippedMyFlesh", pathExtension: "jpg")
    /// Resource file `SuperTrampBreakfastinAmerica.jpg`.
    static let superTrampBreakfastinAmericaJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "SuperTrampBreakfastinAmerica", pathExtension: "jpg")
    /// Resource file `WishYouWereHere.jpg`.
    static let wishYouWereHereJpg = Rswift.FileResource(bundle: R.hostingBundle, name: "WishYouWereHere", pathExtension: "jpg")
    
    /// `bundle.url(forResource: "ACDCBackInBlack", withExtension: "jpg")`
    static func acdcBackInBlackJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.acdcBackInBlackJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "AdvertBackground", withExtension: "jpg")`
    static func advertBackgroundJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.advertBackgroundJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "Asia", withExtension: "jpg")`
    static func asiaJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.asiaJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BeatlesAbbeyRoad", withExtension: "jpg")`
    static func beatlesAbbeyRoadJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.beatlesAbbeyRoadJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BlackSabbath", withExtension: "jpg")`
    static func blackSabbathJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.blackSabbathJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BlondieParallelLines", withExtension: "jpg")`
    static func blondieParallelLinesJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.blondieParallelLinesJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BowieAladinSane", withExtension: "jpg")`
    static func bowieAladinSaneJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.bowieAladinSaneJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BowieDiamondDogs", withExtension: "jpg")`
    static func bowieDiamondDogsJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.bowieDiamondDogsJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "BrainSalad", withExtension: "jpg")`
    static func brainSaladJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.brainSaladJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "CreamDisraeliGears", withExtension: "jpg")`
    static func creamDisraeliGearsJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.creamDisraeliGearsJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "ElvisPresleyDebutAlbum", withExtension: "jpg")`
    static func elvisPresleyDebutAlbumJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.elvisPresleyDebutAlbumJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "GoodbyeYellowBrickRoad", withExtension: "jpg")`
    static func goodbyeYellowBrickRoadJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.goodbyeYellowBrickRoadJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "ItsABeautifulDay", withExtension: "jpg")`
    static func itsABeautifulDayJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.itsABeautifulDayJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "JoeJacksonLookSharp", withExtension: "jpg")`
    static func joeJacksonLookSharpJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.joeJacksonLookSharpJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "MadnessOneStepBeyond", withExtension: "jpg")`
    static func madnessOneStepBeyondJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.madnessOneStepBeyondJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "MothersOfInventionWeaselsRippedMyFlesh", withExtension: "jpg")`
    static func mothersOfInventionWeaselsRippedMyFleshJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.mothersOfInventionWeaselsRippedMyFleshJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "SuperTrampBreakfastinAmerica", withExtension: "jpg")`
    static func superTrampBreakfastinAmericaJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.superTrampBreakfastinAmericaJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "WishYouWereHere", withExtension: "jpg")`
    static func wishYouWereHereJpg(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.wishYouWereHereJpg
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 20 images.
  struct image {
    /// Image `ACDCBackInBlack.jpg`.
    static let acdcBackInBlackJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ACDCBackInBlack.jpg")
    /// Image `AdvertBackground.jpg`.
    static let advertBackgroundJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "AdvertBackground.jpg")
    /// Image `ArrowDown`.
    static let arrowDown = Rswift.ImageResource(bundle: R.hostingBundle, name: "ArrowDown")
    /// Image `ArrowUp`.
    static let arrowUp = Rswift.ImageResource(bundle: R.hostingBundle, name: "ArrowUp")
    /// Image `Asia.jpg`.
    static let asiaJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "Asia.jpg")
    /// Image `BeatlesAbbeyRoad.jpg`.
    static let beatlesAbbeyRoadJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BeatlesAbbeyRoad.jpg")
    /// Image `BlackSabbath.jpg`.
    static let blackSabbathJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BlackSabbath.jpg")
    /// Image `BlondieParallelLines.jpg`.
    static let blondieParallelLinesJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BlondieParallelLines.jpg")
    /// Image `BowieAladinSane.jpg`.
    static let bowieAladinSaneJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BowieAladinSane.jpg")
    /// Image `BowieDiamondDogs.jpg`.
    static let bowieDiamondDogsJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BowieDiamondDogs.jpg")
    /// Image `BrainSalad.jpg`.
    static let brainSaladJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "BrainSalad.jpg")
    /// Image `CreamDisraeliGears.jpg`.
    static let creamDisraeliGearsJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "CreamDisraeliGears.jpg")
    /// Image `ElvisPresleyDebutAlbum.jpg`.
    static let elvisPresleyDebutAlbumJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ElvisPresleyDebutAlbum.jpg")
    /// Image `GoodbyeYellowBrickRoad.jpg`.
    static let goodbyeYellowBrickRoadJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "GoodbyeYellowBrickRoad.jpg")
    /// Image `ItsABeautifulDay.jpg`.
    static let itsABeautifulDayJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ItsABeautifulDay.jpg")
    /// Image `JoeJacksonLookSharp.jpg`.
    static let joeJacksonLookSharpJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "JoeJacksonLookSharp.jpg")
    /// Image `MadnessOneStepBeyond.jpg`.
    static let madnessOneStepBeyondJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "MadnessOneStepBeyond.jpg")
    /// Image `MothersOfInventionWeaselsRippedMyFlesh.jpg`.
    static let mothersOfInventionWeaselsRippedMyFleshJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "MothersOfInventionWeaselsRippedMyFlesh.jpg")
    /// Image `SuperTrampBreakfastinAmerica.jpg`.
    static let superTrampBreakfastinAmericaJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "SuperTrampBreakfastinAmerica.jpg")
    /// Image `WishYouWereHere.jpg`.
    static let wishYouWereHereJpg = Rswift.ImageResource(bundle: R.hostingBundle, name: "WishYouWereHere.jpg")
    
    /// `UIImage(named: "ACDCBackInBlack.jpg", bundle: ..., traitCollection: ...)`
    static func acdcBackInBlackJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.acdcBackInBlackJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "AdvertBackground.jpg", bundle: ..., traitCollection: ...)`
    static func advertBackgroundJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.advertBackgroundJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ArrowDown", bundle: ..., traitCollection: ...)`
    static func arrowDown(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.arrowDown, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ArrowUp", bundle: ..., traitCollection: ...)`
    static func arrowUp(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.arrowUp, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Asia.jpg", bundle: ..., traitCollection: ...)`
    static func asiaJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.asiaJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BeatlesAbbeyRoad.jpg", bundle: ..., traitCollection: ...)`
    static func beatlesAbbeyRoadJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.beatlesAbbeyRoadJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BlackSabbath.jpg", bundle: ..., traitCollection: ...)`
    static func blackSabbathJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.blackSabbathJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BlondieParallelLines.jpg", bundle: ..., traitCollection: ...)`
    static func blondieParallelLinesJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.blondieParallelLinesJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BowieAladinSane.jpg", bundle: ..., traitCollection: ...)`
    static func bowieAladinSaneJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.bowieAladinSaneJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BowieDiamondDogs.jpg", bundle: ..., traitCollection: ...)`
    static func bowieDiamondDogsJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.bowieDiamondDogsJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "BrainSalad.jpg", bundle: ..., traitCollection: ...)`
    static func brainSaladJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.brainSaladJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "CreamDisraeliGears.jpg", bundle: ..., traitCollection: ...)`
    static func creamDisraeliGearsJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.creamDisraeliGearsJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ElvisPresleyDebutAlbum.jpg", bundle: ..., traitCollection: ...)`
    static func elvisPresleyDebutAlbumJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.elvisPresleyDebutAlbumJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "GoodbyeYellowBrickRoad.jpg", bundle: ..., traitCollection: ...)`
    static func goodbyeYellowBrickRoadJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.goodbyeYellowBrickRoadJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ItsABeautifulDay.jpg", bundle: ..., traitCollection: ...)`
    static func itsABeautifulDayJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.itsABeautifulDayJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "JoeJacksonLookSharp.jpg", bundle: ..., traitCollection: ...)`
    static func joeJacksonLookSharpJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.joeJacksonLookSharpJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MadnessOneStepBeyond.jpg", bundle: ..., traitCollection: ...)`
    static func madnessOneStepBeyondJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.madnessOneStepBeyondJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MothersOfInventionWeaselsRippedMyFlesh.jpg", bundle: ..., traitCollection: ...)`
    static func mothersOfInventionWeaselsRippedMyFleshJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.mothersOfInventionWeaselsRippedMyFleshJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SuperTrampBreakfastinAmerica.jpg", bundle: ..., traitCollection: ...)`
    static func superTrampBreakfastinAmericaJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.superTrampBreakfastinAmericaJpg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "WishYouWereHere.jpg", bundle: ..., traitCollection: ...)`
    static func wishYouWereHereJpg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.wishYouWereHereJpg, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 4 nibs.
  struct nib {
    /// Nib `AdvertisementCell`.
    static let advertisementCell = _R.nib._AdvertisementCell()
    /// Nib `CarouselCell`.
    static let carouselCell = _R.nib._CarouselCell()
    /// Nib `MusicAlbumCell`.
    static let musicAlbumCell = _R.nib._MusicAlbumCell()
    /// Nib `OverlayBannerLabel`.
    static let overlayBannerLabel = _R.nib._OverlayBannerLabel()
    
    /// `UINib(name: "AdvertisementCell", in: bundle)`
    static func advertisementCell(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.advertisementCell)
    }
    
    /// `UINib(name: "CarouselCell", in: bundle)`
    static func carouselCell(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.carouselCell)
    }
    
    /// `UINib(name: "MusicAlbumCell", in: bundle)`
    static func musicAlbumCell(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.musicAlbumCell)
    }
    
    /// `UINib(name: "OverlayBannerLabel", in: bundle)`
    static func overlayBannerLabel(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.overlayBannerLabel)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    struct _AdvertisementCell: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "AdvertisementCell"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _CarouselCell: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "CarouselCell"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _MusicAlbumCell: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "MusicAlbumCell"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _OverlayBannerLabel: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "OverlayBannerLabel"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try main.validate()
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = ViewController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      static func validate() throws {
        if UIKit.UIImage(named: "ArrowUp") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ArrowUp' is used in storyboard 'Main', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
